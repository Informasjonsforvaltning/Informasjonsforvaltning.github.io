[{"uri":"/felles-datakatalog/begrepskatalog/bakgrunn-hvorfor-begrepskatalog/","title":"Bakgrunn - hvorfor begrepskatalog","tags":[],"description":"","content":"Det er stadig økende forventinger fra politikere, innbyggere og næringslivet om mer deling av data. For at forvaltningen skal kunne levere kunnskap i form av data på en forsvarlig, sikker og samtidig enkel måte, må vi være i stand til å beskrive hva vi har. Data kan beskrives i form av en datakatalog (se Felles datakatalog), men dataene har også en betydning, som kan endre seg avhengig av hvilken kontekst de brukes i.\nDet er derfor en forutsetning at vi beskriver, og gjør tilgjengelig betydningen av informasjonen vi har lagret i registre, saksbehandlingssystemer og i forvaltningspraksis, slik at offentlig sektor kan dele denne kunnskapen og samtidig tilrettelegge for gjenbruk av den på tvers av tjenestene som inngår sitt samfunnsoppdrag.\nFlere og flere virksomheter jobber nå systematisk med begrepsarbeid, og de siste årene har det også blitt lagt ned betydelig arbeid i felles standarder for å beskrive begreper og å tilgjengeliggjøre disse. Med standarder på plass på definisjons og begrepsanalyseområdet, blir det enda lettere å dele virksomhetens fortolkning av informasjonen den forvalter. Et neste skritt på veien mot \u0026ldquo;kun én gang\u0026rdquo; er at virksomhetene deler sine begreper i én felles begrepskatalog.\n"},{"uri":"/felles-datakatalog/bakgrunn-f%C3%B8ringer-effekter/","title":"Bakgrunn, føringer og effekter","tags":[],"description":"","content":" Felles offentlig informasjonsforvaltning Beslutninger i offentlig sektor tas på grunnlag av informasjon innhentet fra brukere, tredjeparter og fra andre offentlige virksomheter. Med god dokumentering av hvilken informasjon den enkelte offentlige virksomhet forvalter og åpne APIer som gir tilgang til selve dataene, kan andelen som brukerne selv rapporterer inn gradvis reduseres.\nTiltak over flere trinn Tiltakene innen informasjonsforvaltning plasserers ofte i følgende \u0026ldquo;ambisjonstrapp\u0026rdquo; hentet fra Difis sider om informasjonsforvaltning:\n Tilrettelegge - \u0026ldquo;Orden i eget hus\u0026rdquo;  Skaffe oversikt over den informasjon som virksomhetene forvalter = beskrive denne på en enhetlig måte gjennom begrepsarbeid og gode definisjoner, samt vise sammenhenger gjennom informasjonsmodeller. Synliggjøre beskrivelsene for andre i form av datasett som blir publisert i en felles datakatalog. Herunder beskrivelser av kvalitet, opprinnelse/kontekst, lovgrunnlag, behandlinger og vedtak.\n Tilgjengeliggjøre oversikten  Beskrive hvordan data som er beskrevet i datasettene kan nås og anvendes – i en maskinlesbar og automatisert form – via en felles API-katalog. Også for data der tilgangen er begrenset (ikke åpne data), men som likevel kan nås dersom nærmere vilkår er oppfylt (hjemmel, registreringer, betalinger osv)\n Anvendelse - kun én gang (\u0026ldquo;Once only\u0026rdquo;)  Etter hvert som oversiktene blir mer komplette og katalogene fylles opp av virksomhetene, vil det være grunnlag for mer automatisert gjenbruk og viderebruk av data, og mulig å nå målet om at informasjon bare skal innhentes én gang (deretter gjenbrukes).\nFøringer Digitaliseringsrundskrivet er en sammenstilling av pålegg og anbefalinger om digitalisering i offentlig sektor. Rundskrivet gir følgende anbefaling: \u0026ldquo;Den enkelte virksomhet bør synliggjøre data som de er i stand til å dele med andre i Felles datakatalog og på data.norge.no.\u0026rdquo;\nEffekter Effektene av arbeidet med informasjonsforvaltning gjennom disse tiltakene vil blant annet være økt datakvalitet - felles definisjoner/forståelse og mere sanntidsdata. Dette vil igjen åpne for at rapporteringsplikter (skjema) kan reduseres i antall og omfang.\nVidere vil mer av rapporteringen kunne foregå med utgangspunkt i maskinelle og automatiserte løsninger (uttrekk og høsting av oppdaterte og riktige data basert på modeller). Herunder en bedre integrasjon mot andre eksisterende løsninger og muligheter for mer samhandling slik at rapporteringene rettes mot brukernes egne prosesser (brukerorientering).\nMed bedre beskrivelser og maskinlesbarhet vil det også ligge mer til rette for analyser av data og anvendelser innen kunstig intelligens (AI), noe som ytterligere styrker mulighetene for innovasjon. Både i form av mer bruk av sanntids informasjon og i form av sammensatte brukerorienterte tjenester.\nPå sikt kan det også føre til at noen rapporteringsplikter forsvinner fordi data fanges i det de oppstår og følger gjennom hele prosesser (sensorer – \u0026ldquo;tingenes internett\u0026rdquo;, transaksjoner – bestilling, kjøp/salg, fakturering, regnskap…)\nArbeidet med informasjonsforvaltning resulterer altså i et helt annet mulighetsrom når det gjelder anvendelse av data. Enten dette gjelder gjenbruk i rapporteringssammenheng eller innovasjon og nye forretningsområder. Det er gjort mange forsøk på å beskrive verdien av en slik effektiv bruk av data, f.eks. i USA (McKinsey) og EU, og dette beløper seg til mange milliarder. Uansett, det forutsetter at informasjonen er beskrevet og tilgjengeliggjort – i vårt tilfelle blant annet at de felles katalogene blir fylt med innhold.\n"},{"uri":"/developers_handbook/code_quality/coverage/","title":"Coverage","tags":[],"description":"","content":"Test coverage numbers are not the goal in itself. What is important to monitor is whether or not a pull request increases or decreases coverage. In most all cases a pull request should maintain or increase coverage. In extreme cases (e.g. when fixing a critical bug), it might be necessary to temporarily sacrifice coverage.\n"},{"uri":"/felles-datakatalog/","title":"Felles datakatalog","tags":[],"description":"","content":" \u0026nbsp; \nDATASETT - BEGREPER - API - INFORMASJONSMODELLERFelles datakatalog (FDK) er en løsning som gir oversikt over datasett, begreper, API og informasjonsmodeller (og sammenhenger mellom disse) i offentlig sektor.\nI menyen til venstre kan du finne informasjon om de ulike katalogene. Hvor finner jeg felles datakatalog? Her finner du Felles datakatalog: https://data.norge.no\nHvordan kan jeg teste felles datakatalog? Her finner du vårt demo miljø: https://demo.fellesdatakatalog.digdir.no\nHer finner du registreringsløsningene i demo miljøet: https://registrering.demo.fellesdatakatalog.digdir.no\nFor å få demo-bruker kan du ta kontakt på mail: fellesdatakatalog@digdir.no\nHar dere statistikk på bruk? Ja, se her for statistikk over innhold og bruk av felles datakatalog.\nHva er planer for løsningen videre? Ved å følge vår åpne behovsprosess vil du finne ut alt om våre neste leveranser. Se Behovsprosessen.\n"},{"uri":"/developers_handbook/code_organization/frontend/","title":"Front-end","tags":[],"description":"","content":"For our front-end (GUI) services implemented in React , a typical folder structure should be\u0026hellip;\n"},{"uri":"/developers_handbook/prepare_your_computer/linux/","title":"Linux","tags":[],"description":"A howto decsribing how to create and run a linux virtual machine","content":" HOWTO create and run a linux developer virtual machine on your non-linux laptop.  Install VMware Workstation Player for Windows 64-bit Operating Systems\n Download Ubuntu Desktop iso\n Open VMware Workstation Player and create a new Virtual Machine\n In the dialogue, choose \u0026ldquo;I will install the operating system later\u0026rdquo;:\n Choose \u0026ldquo;Linux\u0026rdquo; Version Ubuntu 64-bit\n Give it a suitable name and Location should be on your computer, preferably a SSD. Do NOT install on network-drive.\n Maximum disk size should be set to e.g. 100GB, single file is OK.\n Review your settings and press Finish.\n   Select your new virtual machine, and press \u0026ldquo;Edit virtual machine settings\u0026rdquo;.\n Under Hardware, choose\n CD/DVD (SATA), choose \u0026ldquo;Use ISO image file:\u0026rdquo; and point to the location on your disc with the iso image from step 2.\n Memory: \u0026gt; 8GB\n Processors: 4 cores. Check the box for \u0026ldquo;Virtualize Intel VT-x/EPT or AMD-V/RVI\u0026rdquo;\n  Press OK.\n  Select your new virtual machine, and press \u0026ldquo;Play virtual machine\u0026rdquo;. Installation of os will start.\n Follow instructions. They should be self explained.\n Choose \u0026ldquo;Norsk bokmål\u0026rdquo; and press \u0026ldquo;Installer Ubuntu\u0026rdquo;\n  After successful installation of os, your virtual machine will reboot. Make sure the ISO image file is removed from the settings.\n   "},{"uri":"/developers_handbook/microservices/","title":"Microservices","tags":[],"description":"","content":" We base our understanding of what a microservice is on the following definitions:\n Microservices are small, autonomous services that work together.\nServices are out-of-process components who communicate with a mechanism such as a web service request, or remote procedure call.\nA component is a unit of software that is independently replaceable and upgradeable.\n References Sam Newman, Building Microservices\nMartin Fowler, Microservices\n"},{"uri":"/felles-datakatalog/overordnet-arkitektur/n%C3%A5situasjon/","title":"Nåsituasjon","tags":[],"description":"","content":" Her følger en kort oversikt over den overordnede arkitekturen til våre komponenter.\nDiagram Sammenhengen mellom komponentene illustreres i følgende diagram: Om komponentene i nåsituasjon I dag har vi delt de ulike komponentene inn i en løsning for søk i kataloger, en løsning for registrering, en løsning for innhøsting (harvester). I tillegg har vi en intern komponent for referanse-data.\nSøkeløsningen  search: Vår portal for søk på tvers av alle katalogene search-api: Eksternt api med oppslag mot datasettkatalogen. api-cat: Eksternt api med oppslag mot api-katakogen. concept-cat: Eksternt api med oppslag mot begreps-katalogen.  Registreringsløsningen  registration-react: Vårt brukergrensesnitt for å registrere og legge inn innhold i kataloger registration-api: backend-komponent for Registreringsløsningen registration-auth: komponent som håndterer innlogging via IDPorten  Høsteløsningen Høsteløsningen laster ned datakataloger og gjør dem søkbare. Består av\n harvester harvester-api  Modellene  Archi-modellen: https://github.com/Informasjonsforvaltning/SA_Informasjonsforvaltning_BASELINE Html-versjon: https://informasjonsforvaltning.github.io/SA_Informasjonsforvaltning_BASELINE/  "},{"uri":"/developers_handbook/monitoring/probes/","title":"Probes","tags":[],"description":"","content":" Probes should not require authorization.\nAny code greater than or equal to 200 and less than 400 indicates success. Any other code indicates failure.\nReadiness A readiness probe is used to check whether the service is ready to accept connections.\nIn the deployment.yaml, you define the readiness probe. Example:\nreadinessProbe: httpGet: path: /ready port: 8080 initialDelaySeconds: 20 periodSeconds: 30 successThreshold: 1 failureThreshold: 5  We should check if the runtime dependencies that the service absolutely need to function, is ready. If the service depends on a database, it should check if the database is ready.\nLiveness A liveness probe is used to check whether the service has gone into a broken state.\nIn the deployment.yaml, you define the readiness probe. Example:\nlivenessProbe: httpGet: path: /ping port: 8080 initialDelaySeconds: 20 periodSeconds: 30 successThreshold: 1 failureThreshold: 5  An implementation (in java/kotlin) would be simply\n@RequestMapping(value = [\u0026quot;/ping\u0026quot;], method = [GET]) fun ping(): ResponseEntity\u0026lt;Void\u0026gt; = ResponseEntity.ok().build()  References The following is a nice intro for Spring Boot: https://www.baeldung.com/spring-boot-kubernetes-self-healing-apps Kubernetes configuration: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/ Example with authorization: https://www.critiqus.com/post/kubernetes-health/\n"},{"uri":"/felles-datakatalog/informasjonsmodell-katalog/standarder/","title":"Standarder","tags":[],"description":"","content":" Informasjonsmodell-katatalogen representerer modeller på to måter:\nStruktur Dette er en fritekstlig representasjon av modellen med navn på elementet og elementets type.\nJSON Schema Dette er en representasjon av modellen i form av JSON Schema. Vi støtter pr i dag draft-06 av spesifikasjonen. For eksempel slik:\n{ \u0026quot;$schema\u0026quot;: \u0026quot;http://json-schema.org/draft-06/schema#\u0026quot;, \u0026quot;$id\u0026quot;: \u0026quot;https://fellesdatakatalog.digdir.no/informationmodels/c207ad40-cf59-47e6-b7a8-35d6c4692067/schema\u0026quot;, \u0026quot;definitions\u0026quot;: { \u0026quot;QueryResponse\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;object\u0026quot;, \u0026quot;properties\u0026quot;: { \u0026quot;aggregations\u0026quot;: { \u0026quot;$ref\u0026quot;: \u0026quot;#/definitions/Aggregation\u0026quot; }, \u0026quot;hits\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;array\u0026quot;, \u0026quot;items\u0026quot;: { \u0026quot;$ref\u0026quot;: \u0026quot;#/definitions/ConceptDocument\u0026quot; } }, \u0026quot;total\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;integer\u0026quot;, \u0026quot;format\u0026quot;: \u0026quot;int64\u0026quot; } } }, \u0026quot;Aggregation\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;object\u0026quot; }, \u0026quot;ConceptDocument\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;object\u0026quot; }, \u0026quot;ErrorMessage\u0026quot;: { \u0026quot;type\u0026quot;: \u0026quot;object\u0026quot; } } }  "},{"uri":"/felles-datakatalog/api-katalog/styringsdokumenter/","title":"Styringsdokumentasjon API katalog","tags":[],"description":"","content":"Her finner du styringsdokumentene i felles API-katalog utviklet av Digitaliseringsdirektoratet.\n Styringsdokument Behovsbeskrivelse  "},{"uri":"/felles-datakatalog/api-katalog/api/","title":"API","tags":[],"description":"","content":" Her følger en kort beskrivelse API-katalogens API, samt eksempel på bruk med curl.\nDetaljer  Server: https://fellesdatakatalog.digdir.no Tilbyr: application/json     Oppføring i API-katalogen Lenke direkte til spesifikasjon (openAPI v3)          Eksempel på spørringer Alle API-er:\ncurl -H \u0026quot;Accept: application/json\u0026quot; \u0026quot;https://fellesdatakatalog.digdir.no/api/apis\u0026quot;  Et spesifikt API basert på id:\ncurl -H \u0026quot;Accept: application/json\u0026quot; \u0026quot;https://fellesdatakatalog.digdir.no/api/apis/\u0026lt;id\u0026gt;\u0026quot;  En enkelt søk etter API-er med ordet \u0026ldquo;barnehage\u0026rdquo;:\ncurl -H \u0026quot;Accept: application/json\u0026quot; \u0026quot;https://fellesdatakatalog.digdir.no/api/apis?q=barnehage\u0026quot;  Liste alle API-er der utgiver er Registerenheten i Brønnøysund:\ncurl -H \u0026quot;Accept: application/json\u0026quot; \u0026quot;https://fellesdatakatalog.digdir.no/api/apis?orgPath=/STAT/912660680/974760673\u0026quot;  Liste endepunkter til alle API-er som realiserer en gitt tjenestetype. Merk: \u0026ldquo;environment\u0026rdquo; er obligatorisk og må enten vere \u0026ldquo;test\u0026rdquo; eller \u0026ldquo;production\u0026rdquo;\ncurl -H \u0026quot;Accept: application/json\u0026quot; \u0026quot;https://fellesdatakatalog.digdir.no/api/apis/endpoints?serviceType=Kontoopplysninger\u0026amp;environment=production\u0026quot;  Liste endepunkter til alle API-er som realiserer en gitt tjenestetype for gitte organisasjonsnummer:\ncurl -H \u0026quot;Accept: application/json\u0026quot; \u0026quot;https://fellesdatakatalog.digdir.no/api/apis/endpoints?serviceType=Kontoopplysninger\u0026amp;orgNos=984851006,837884942\u0026amp;environment=production\u0026quot;  "},{"uri":"/felles-datakatalog/datasett-katalog/api/","title":"API","tags":[],"description":"","content":" Her følger en kort beskrivelse datasett-katalogens API, samt eksempel på bruk med curl.\nDetaljer  Server: https://fellesdatakatalog.digdir.no Tilbyr: application/json     Oppføring i API-katalogen Lenke direkte til spesifikasjon (openAPI v3)      Eksempel på spørringer Alle datasett:\ncurl -H \u0026quot;Accept: application/json\u0026quot; https://fellesdatakatalog.digdir.no/api/datasets  Alle datasett med \u0026ldquo;paginering\u0026rdquo;, returnerer første side:\ncurl -H \u0026quot;Accept: application/json\u0026quot; 'https://fellesdatakatalog.digdir.no/api/datasets?page=0'  Et spesifikt datasett basert på id:\ncurl -H \u0026quot;Accept: application/json\u0026quot; https://fellesdatakatalog.digdir.no/api/datasets/\u0026lt;id\u0026gt;  En enkelt søk etter datasett med ordet \u0026ldquo;barnehage\u0026rdquo;:\ncurl -H \u0026quot;Accept: application/json\u0026quot; https://fellesdatakatalog.digdir.no/api/datasets?q=barnehage  "},{"uri":"/felles-datakatalog/informasjonsmodell-katalog/api/","title":"API","tags":[],"description":"","content":" Her følger en kort beskrivelse informasjonsmodell-katalogens API, samt eksempel på bruk med curl..\nDetaljer  Server: https://fellesdatakatalog.digdir.no/api/informationmodels Tilbyr: application/json     Oppføring i API-katalogen Lenke direkte til spesifikasjon (openAPI v3)      Eksempel på spørringer Alle informasjonsmodeller:\ncurl -H \u0026quot;Accept: application/json\u0026quot; https://fellesdatakatalog.digdir.no/api/informationmodels  En spesifik informasjonsmodell basert på id:\ncurl -H \u0026quot;Accept: application/json\u0026quot; https://fellesdatakatalog.digdir.no/api/informationmodels/\u0026lt;id\u0026gt;  En enkelt søk etter modeller med ordet \u0026ldquo;summert\u0026rdquo;:\ncurl -H \u0026quot;Accept: application/json\u0026quot; https://fellesdatakatalog.digdir.no/api/informationmodels?q=summert  "},{"uri":"/developers_handbook/code_organization/backend/","title":"Back-end","tags":[],"description":"","content":"For our \u0026ldquo;back-end\u0026rdquo; services implemented in java/kotlin, a typical folder structure should be:\ntree -L 6 --dirsfirst -I 'target' . ├── src │ ├── main │ │ ├── java │ │ │ └── no │ │ │ ├── brreg │ │ │ │ └── Generated.java │ │ │ └── template │ │ │ ├── model │ │ │ ├── spring │ │ │ └── Application.java │ │ ├── kotlin │ │ │ └── no │ │ │ └── template │ │ │ ├── controller │ │ │ ├── jena │ │ │ ├── mapping │ │ │ ├── repository │ │ │ └── service │ │ └── resources │ │ ├── openAPI │ │ │ └── openapi-generator-maven-plugin │ │ │ └── templates │ │ ├── specification │ │ │ └── template.yaml │ │ ├── application.properties │ │ ├── banner.txt │ │ └── gitBranchName.sh │ └── test │ ├── java │ │ └── no │ │ └── template │ │ ├── controller │ │ ├── integration │ │ ├── service │ │ └── TestResponseReader.java │ ├── kotlin │ │ └── no │ │ └── template │ │ └── TestData.kt │ └── resources │ ├── mockito-extensions │ │ └── org.mockito.plugins.MockMaker │ └── responses │ ├── example.ttl ├── buildCommands.sh ├── docker-compose.yml ├── Dockerfile ├── Jenkinsfile ├── pom.xml ├── README.md ├── TODO.md  A reference implementation is here: https://github.com/Informasjonsforvaltning/a-back-end-service\n"},{"uri":"/developers_handbook/code_organization/","title":"Code organization","tags":[],"description":"","content":"We organize our code in a multi-repo way. That means that one microservice gets one git repository.\n"},{"uri":"/developers_handbook/monitoring/logging/","title":"Logging","tags":[],"description":"","content":"Decide logging standards and conventions  "},{"uri":"/felles-datakatalog/overordnet-arkitektur/m%C3%A5lbilde/","title":"Målbilde","tags":[],"description":"","content":" Vi jobber kontinuerlig med å oppdatere målbildet vårt etter hvert som behovene endrer seg. I hovedsak dreier endringene seg om å implementere støtte for nye typer kataloger.\nDiagram Sammenhengen mellom komponenten illustreres i følgende diagram: Om komponentene i målbildet  Felles Datakatalog Portal: grafisk brukergrensesnitt der publikum har generell tilgang til oversikt over innhold som er publisert av hver enkelt virksomhet. Felles Datakatalog API: back-end komponenter som høster og lagrer fra ulike kilde-kataloger. Tilbyr API for å lese katalog-innhold. X-katalog: samling av kataloger som virksomheter har publisert. Disse komponentene tilbyr et maskin-til-maskin grensesnitt (API) mot de ulike katalogene. Understøtter høsting på standardiserte formater (feks DCAT-AP-NO, SKOS-AP-NO). X-katalog GUI: Et rollebasert brukergrensesnitt der virksomheten har tilgang til søk og oppslag i sin katalog. en x-katalog i virksomheten: lokale kataloger som er installert hos den enkelte virksomhet og vedlikeholdes og driftes av virksomheten. Understøtter høsting.  Modellene  Archi-modellen: https://github.com/Informasjonsforvaltning/SA_Informasjonsforvaltning Html-versjon: https://informasjonsforvaltning.github.io/SA_Informasjonsforvaltning/  "},{"uri":"/felles-datakatalog/overordnet-arkitektur/","title":"Overordnet arkitektur","tags":[],"description":"","content":" Her følger en kort oversikt over den overordnede arkitekturen til våre komponenter.\nTOGAF Vi følger en tilpasset versjon av TOGAFs ADM metodikk når vi jobber med arkitektur. Dette betyr at vi tar fram både baseline (Nåsituasjon) og target (Målbilde) modeller, og ut i fra disse utarbeider vi transisjoner og migrasjonsplaner. Transisjons-arkitekturer er å finne i målbildet.\nArchiMate Våre arkitekturmodeller er laget i henhold til Archimate-rammeverket med hjelp av verktøyet Archi. Kildekoden til modellene ligger åpent tilgjengelig for alle på våre Github-side. Hvordan vi har brukt Archi og en enkel oppskrift på hvordan ta dette i bruk vil du finne under de respektive arkitektur-modellene. Det finnes også en en html-versjon av modellene. Linken til disse vil du finne på sidene under.\nAPI-first Vi forsøker å utvikle våre komponenter etter “API”-first metodikken. Vi har derfor valgt å spesifisere våre API etter OpenAPI Specification v 3.\nÅpen kildekode Kildekoden til løsningen ligger åpent tilgjengelig på Github. All kildekode har en åpen lisens Apache License 2.0\n"},{"uri":"/developers_handbook/prepare_your_computer/required_software/","title":"Required software","tags":[],"description":"A list of required software and how to install","content":" In your linux machine you will need to install some software Docker Instructions here\nDocker compose Instructions here\nMaven % sudo apt-get install maven  OpenJDK % sudo apt-get install default-jdk  This is as of now openjdk-11. If you need java 8, do\n% sudo apt-get install openjdk-8-jdk  Kotlin % snap install kotlin  Git % sudo apt-get install git  Python Python (both 2.7 and 3.) should be preinstalled.\n% python --version Python 2.7.16+ % python3 --version Python 3.7.4  NodeJS It is highly recommended to use the node version manager (nvm). To install nvm, follow instructions.\nThen, to download, compile, and install the latest release of node, do this:\n% nvm install node # \u0026quot;node\u0026quot; is an alias for the latest version  "},{"uri":"/felles-datakatalog/begrepskatalog/standarder/","title":"Standarder","tags":[],"description":"","content":"Her introduserer vi de standardene vi bruker i Felles begrepskatalog. Standardene som pekes til er forvaltet av Difi. Feltene i standarden bygger på innholdsstandarden \u0026ldquo;Forvaltningsstandard for begrepsbeskrivelser\u0026rdquo;.\nNår man skal tilgjengeliggjøre begreper kan SKOS eller TBX benyttes. På gjeldende tidspunkt støttes kun SKOS. Støtte for TBX vil komme. Utvekslingsstandardene og revidert \u0026ldquo;Forvaltningsstandard for begrepsbeskrivelser\u0026rdquo; blir gjeldende i hhv. versjon 1.0 og 2.0 fra januar 2019.\n"},{"uri":"/behovsprosessen/","title":"Åpen behovsprosess","tags":[],"description":"","content":" Vår behovsprosess er implementert som et GitHub-prosjekt og er åpent tilgjengelig. Behovsprosessen starter ved at det er registrert et issue på en av våre løsninger eller på vårt dedikerte behovsprosjekt.\nDersom du ønsker å registrere et behov eller en brukerhistorie mot en av våre løsninger, kan du opprette et nytt issue ved å opprette en brukerhistorie.\nBehovsprosessen har følgende steg:\nAvklare behov Kriteria: Issuet skal vere identifisert som et potensielt behov.\nAktiviterer:\n   Ansvarlig rolle Aktivitet Verktøy     Gevinstansvarlig Opprette epos og utarbeide enkel gevinstanalyse GitHub   Funksjonell arkitekt Opprette brukerhistorier GitHub    Analysere behov Kriteria: Behovet skal vere formulert som et epos og ha en enkel gevinstanalyse. Brukerhistorien skal tildeles forretningsverdi etter følgende kriteria:\n   Indikator Kriterium     Kritisk Eposet kan ikke leveres uten denne brukerhistorien.   Viktig Brukerhistorien er vesentlig for at funksjonaliteten i Eposet realiseres.   Mindre viktig Eposets funksjonelle intensjon er realisert uten denne brukerhistorien.   Kjekt-å-ha Når alt annet er levert og teamet ikke har noe bedre å finne på, kan denne realiseres.    Aktiviteter:\n   Ansvarlig rolle Aktivitet Verktøy     Funksjonell arkitekt Detaljere epos og brukerhistorier som operasjonaliserer eposet GitHub   Løsningsarkitekt Dokumentere relevante kvalitetskrav    Interaksjonsdesigner Lage trådskisser der dette er relevant     Beskrive design og løsningsarkitektur Kriteria: Eposet skal ha ei eller flere brukerhistorier knytta til seg.\nAktiviteter:\n   Ansvarlig rolle Aktivitet Verktøy     Løsningsarkitekt Utarbeide løsningsarkitektur Archi   Designer Utarbeide design basert på trådskisser    Testleder Utarbeide akseptansekriteria som features i Gherkin GitHub   Senior utvikler Utarbeide scenarier i features GitHub    Klar til konstruksjon Kritieria: Brukerhistorien skal ha et design (der det er relevant) og en løsningsarkitektur. Akseptansekriteria skal være dokumentert som et sett av features.\nAktiviteter:\n   Ansvarlig rolle Aktivitet Verktøy     Produkteier Prioritere brukerhistorier GitHub   Scrumleder Opprette brukerhistorien i utviklingsprosjekt GitHub   Seniorutvikler Dele brukerhistorien opp i oppgaver GitHub    I konstruksjon Kritieria: Brukerhistorien er prioritert og opprettet i utviklingsprosjekt.\nHer vil brukerhistorien bli duplisert over i det relevante utviklingsprosjektet, som oppretter sine brukerhistorier etter behov. Disse skal referere til den opprinnelige brukerhistorien i behovsprosjektet. Utviklingsteamet vil også legge brukerhistorien ut i sine prosjekter med tilhørende milepæler.\nKlar til akseptansetest Kriteria: Utviklingsteamet har levert funksjonalitet til staging-miljø som realiserer brukerhistorien.\nAktiviteter:\n   Ansvarlig rolle Aktivitet Verktøy     Funksjonell arkitekt Godkjenne levert funksjonalitet    Løsningsarkitekt Godkjenne levert kvalitet    Produkteier Akseptere levert funksjonalitet     Utført Kriteria: Funksjonalitet og kvalitet er godkjent i akseptansetest og issue er \u0026ldquo;closed\u0026rdquo;. Eller det er bestemt at behovet ikke skal taes videre i behovsprosessen. Alle issues som blir lukka vil automatisk havne i denne kolonnen.\n"},{"uri":"/felles-datakatalog/begrepskatalog/api/","title":"API","tags":[],"description":"","content":" Her følger en kort beskrivelse begrepskatalogens API, samt eksempel på bruk med curl.\nDetaljer  Server: https://fellesdatakatalog.digdir.no Tilbyr: application/json     Oppføring i API-katalogen Lenke direkte til spesifikasjon (openAPI v3)      Eksempel på spørringer Alle begrep:\ncurl -H \u0026quot;Accept: application/json\u0026quot; \u0026quot;https://fellesdatakatalog.digdir.no/api/concepts\u0026quot;  Et spesifikt begrep basert på id:\ncurl -H \u0026quot;Accept: application/json\u0026quot; \u0026quot;https://fellesdatakatalog.digdir.no/api/concepts/\u0026lt;id\u0026gt;\u0026quot;  Et enkelt søk etter begrep med ordet \u0026ldquo;innsyn\u0026rdquo;:\ncurl -H \u0026quot;Accept: application/json\u0026quot; \u0026quot;https://fellesdatakatalog.digdir.no/api/concepts?q=innsyn\u0026quot;  En spørring som gir filter på organisasjonen (i eksempelet Brønnøysundregistrene) som har publisert begrepet:\ncurl -H \u0026quot;Accept: application/json\u0026quot; \u0026quot;https://fellesdatakatalog.digdir.no/api/concepts?orgPath=/STAT/912660680/974760673\u0026quot;  Tilgang til registreringsløsningens samling av publiserte begreper som SKOS-AP-NO:\ncurl -H \u0026quot;Accept: text/turtle\u0026quot; https://registrering-begrep-api.fellesdatakatalog.digdir.no/collections  Som over, men for ein gitt organisasjon (publisher):\ncurl -H \u0026quot;Accept: text/turtle\u0026quot; \u0026quot;https://registrering-begrep-api.fellesdatakatalog.digdir.no/collections?publisher=991825827\u0026quot;  "},{"uri":"/felles-datakatalog/datasett-katalog/","title":"Datasett-katalog","tags":[],"description":"","content":" Felles Datasettkatalog er en løsning som gir oversikt over datasett i offentlig sektor, enten de er offentlige åpne data eller begrenset offentlighet. Katalogen adresserer behovet for å oppdage datasett, evaluere om datasettene kan benyttes i den aktuelle konteksten og tilgang til datasett gjennom API-er.\nHvor hentes datasettbeskrivelser fra? FDK høster beskrivelser fra andre datakataloger, herunder geonorge.no, data.norge.no og Statens Vegvesen sin katalog over åpne data. I tillegg tilbys en registreringsløsning.\nHar du en datakatalog som kan eksponeres og deles? Ta kontakt!\nHvordan registerer jeg mine datasett? Felles datasettkatalog inneholder en registreringsløsning som alle offentlige virksomheter kan benytte. Private virksomheter oppfordres til å ta kontakt for å registrere sine datasett.\nHvor finner jeg felles datasettkatalog? Her finner du Felles datasettkatalog: https://data.norge.no/datasets\n"},{"uri":"/developers_handbook/","title":"Developer&#39;s handbook","tags":[],"description":"","content":"The Developer\u0026rsquo;s handbook contains descriptions of our best practices developers will find useful when producing code in our projects. You will find few absolute rules, but you are strongly encouraged to follow practices described here.\n"},{"uri":"/developers_handbook/naming/","title":"Naming","tags":[],"description":"","content":"There are two hard things in Computer Science, and the following is an attempt to ease our pain when naming things.\n   What Naming convention Example     microservice functional description (+service) A backend service   repository microservice name a-backend-service   api specification microservice name.yaml a-backend-service.yaml   groupId no.brreg.servicename no.brreg.abackendservice   artifactId service-name a-backend-service   package groupId.funtion no.brreg.abackendservice.api|controller|service|repository|model   Api classes name-of-resource-in-api-spec+Api SomeResourceApi.java   Model classes name-of-resource-in-api-spec+DB SomeResourceDB.java   Controller classes name-of-resource-in-api-spec+ApiImpl.java SomeResourceApiImpl.java   Service classes name-of-resource-in-api-spec +Service SomeResourceService.java   Repository classes name-of-resource-in-api-spec +Repository SomeResourceRepository.java    "},{"uri":"/developers_handbook/prepare_your_computer/recommended_software/","title":"Recommended software","tags":[],"description":"A list of recommended software and how to install","content":" The following is a list of useful software that is recommended An IDE ATOM: https://snapcraft.io/atom\n% sudo snap install atom --classic  or IntelliJ IDEA Community Edition: https://snapcraft.io/intellij-idea-community\n% sudo snap install intellij-idea-community --classic --edge  For Python-hackers, it is highly recommended to install and use virtual-env\nsudo apt-get install python3-venv  Google Cloud SDK sudo snap install google-cloud-sdk --classic  You then have to initialize the SDK. Follow instructions here\nkubectl sudo snap install kubectl --classic  More [here](https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl-on-linux\nYou need to set a default cluster (e.g fdk-dev) for kubectl commands:\ngcloud container clusters get-credentials fdk-dev  Enable shell autocompletion for kubectl In short, if you use zsh add the follwing line to the end of your ~/.zshrc file:\nsource \u0026lt;(kubectl completion zsh)  Instructions here\n"},{"uri":"/felles-datakatalog/begrepskatalog/standarder/forvaltningsstandard-for-begrepsbeskrivelser/","title":"Standard for begrepsbeskrivelser","tags":[],"description":"","content":" Forvaltningsstandard for begrepsbeskrivelser Forvaltningsstandard for begrepsbeskrivelser følges og legger føringer for feltene i Felles begrepskatalog. Standarden skal sikre at dokumentasjon av begreper gjøres på en felles, strukturert måte. Den stiller krav til innhold i beskrivelse av begrep, det vil si hvilke elementer som skal være med i beskrivelsen.\nSe standarden her: https://www.difi.no/fagomrader-og-tjenester/digitalisering-og-samordning/standarder/referansekatalogen\n"},{"uri":"/felles-datakatalog/api-katalog/","title":"API-katalog","tags":[],"description":"","content":" Felles API-katalog ble utviklet i 2018 som en utvidelse av Felles datakatalog for å skape en oversikt over tilgang til data.\nHvor hentes API-beskrivelser fra? FDK høster beskrivelser fra andre API-kataloger. I tillegg tilbys en registreringsløsning.\nHvordan registerer jeg mine API? Felles datasettkatalog inneholder en registreringsløsning som alle offentlige virksomheter kan benytte. Private virksomheter oppfordres til å ta kontakt for å registrere sine API.\nHvor finner jeg felles API-katalog? Her finner du API-katalogen: https://data.norge.no/dataservices\n"},{"uri":"/developers_handbook/git_workflow/","title":"Git workflow","tags":[],"description":"","content":" There are different popular Git workflows. We consider Gitflow\u0026rdquo; too focused on scheduled releases. Since we try to deploy \u0026ldquo;all the time\u0026rdquo;, we shall adhere to the GitHub Flow:\n  Anything in the master branch is deployable To work on something new, create a descriptively named branch off of master (ie: new-oauth2-scopes) Commit to that branch locally and regularly push your work to the same named branch on the server When you need feedback or help, or you think the branch is ready for merging, open a pull request After someone else has reviewed and signed off on the feature, you can merge it into master Once it is merged and pushed to \u0026lsquo;master\u0026rsquo;, you can and should deploy immediately   Tips and tricks  To track which state of the repo is deployed, we simply expose the currently deployed SHA through the webapp itself and curl it if we need a comparison made.  "},{"uri":"/felles-datakatalog/begrepskatalog/bakgrunn-hvorfor-begrepskatalog/hva-skjer/","title":"Hva skjer?","tags":[],"description":"","content":" Hva har vi gjort? I høst har vi re-planlagt leveranser i API-arbeidet og gjort plass til leveranser på Felles begrepskatalog. 16. november leverte vi den første leveransen på Felles begrepskatalog, kalt \u0026ldquo;Etablere støtte for standarder\u0026rdquo;. Denne leveransen gjorde oss i stand til å støtte de standardene som Difi har utarbeidet på begrepsanalyse og definisjonsarbeid og her ble det gjort et arbeid på GUI – forbedring av eksisterende søkeresultatside, etablert en detaljside for enkeltbegrep, og noe på sammenligning av begreper. Det ble også laget en høsteløsning som kan høste begrep fra virksomhetens lokale kataloger (denne høstingen støtter i dag høsting av begrep som er mappet til SKOS-standarden (W3C), men støtte for TBX-standarden (ISO) vil også komme). For å kunne høste fra lokale begrepskataloger, må det også gjøres en jobb internt hos virksomhetene. Noen av virksomhetene som har jobbet lenge med begrepsarbeid har planer om å publisere begrepsbeskrivelser i Felles begrepskatalog (datakatalog) innen utgangen av 2018, andre har dette på blokka.\nFor å sikre involvering, orientere om utvikling og få tilbakemeldinger fra virksomhetene, har vi opprettet et innføringsteam for Felles begrepskatalog som møtes med jevne mellomrom. Deltakerne i denne gruppa er virksomheter som tidligere har vært involvert i standardiseringstiltakene til Difi og andre virksomheter som har deltatt i SKATE-tiltak. Blant disse kan nevnes NAV, SKD, Lånekassen, Arkivverket, Difi, UDI, Språkrådet, Kartverket og SSB.\nHva kommer?  Støtte for TBX Mulighet for enkel registrering av begrep  "},{"uri":"/felles-datakatalog/begrepskatalog/hvordan_publisere/","title":"Hvordan publisere begreper i begrepskatalogen","tags":[],"description":"","content":" Her følger en kort beskrivelse av hvordan man kan publisere begreper i Felles datakatalog.\nRegistrere begreper i Begrepskatalog GUI I registreringsløsningen vår kan du registrere begreper og publisere de ut til portalløsningen https://data.norge.no.\nImportere Begreper I denne forbindelsen har vi en funksjonalitet for å importere ferdigbeskrevet begreper fra CSV- og JSON-formater\nHvordan Importere begreper fra CSV format? Tabellen består av en rekke kolonne-overskrifter. For at dataene skal leses riktig må overskriftene og dataene være formattert riktig. Enkelte kolonner støtter flere verdier, f.eks bruksområde. For å legge inn flere forekomster av noe, bare legg til en ekstra kolonne med samme navn på første linje(overskrift).\nEnkelte felter støtter også språk og målform. Støttede språk og målformer er for øyeblikket engelsk(en), nynorsk(nn) og norsk bokmål(nb). Om ikke språk og måform er definert så settes bokmål som default. Se SKOS terminologi i øverste rad, og verdien i radene under. Legg til flere begreper under.\n| anbefaltTerm:nb | tillattTerm:nb | anbefaltTerm:en |tillattTerm:en | frarådetTerm:nb | definisjon:nb | | \u0026mdash; | \u0026mdash; | \u0026mdash; | \u0026mdash; | \u0026mdash; | \u0026mdash; | | test eksempel | eksempeltest | Test example | example test | illustrasjonstest | Dette er en definisjon på et eksempel |\nHer er ett eksempel på bruk av bruksområde hvor kolonne a og b er formattert for norsk bokmål (norsk bokmål om ikke annet er oppgitt), og kolonne C og D er på engelsk. Rekkefølgen på kolonnene har ikke noe å si for importering av begreper.\nKolonner som ikke gjenkjennes vil bli ignorert, så det kan være lurt å teste først med et par begreper og kontrollere at disse ble importert korrekt i registreringsløsningen.\nNår formatteringen av tabellen med dine data er ferdig husk å eksportere til CSV separert med semikolon og UTF-8 encoding, og deretter importer CSV filen i registreringsløsningen.\nCSV filen skal se slik ut:\nanbefaltTerm:nb;tillattTerm:nb;anbefaltTerm:en;tillattTerm:en;frarådetTerm:nb;definisjon:nb test eksempel;eksempeltest;Test example;example test;illustrasjonstest;Dette er en definisjon på et eksempel  Last ned eksempelfil med alle felter\nDette er en excelfil som kan manipuleres ved å endre innholdene i feltene beskrevet under eksempler samt legge til flere begreper. Husk å eksportere som CSV separert med semikolon og UTF-8 encoding.\nVeiledning for eksport til UTF-8:  1 - Trykk på \u0026lsquo;Export\u0026rsquo; 2 - Trykk på \u0026lsquo;Change File Type\u0026rsquo; 3 - Velg \u0026lsquo;CSV (comma delimited)\u0026rsquo; 4 - Trykk på \u0026lsquo;Save as\u0026rsquo; 5 - Velg \u0026lsquo;CSV UTF-8 (comma delimited)\u0026rsquo; under \u0026lsquo;Save as type\u0026rsquo;  Gyldige felter    Felt Kommentar Eksempel     anbefaltTerm Flere språk og målformer, kun en kolonne pr språk og målform.    tillattTerm Flere språk og målformer, ubegrenset antall kolonner pr målform (kan ha flere tillatte termer).    frarådetTerm Flere språk og målformer, ubegrenset antall kolonner pr målform (kan ha flere frarådede termer).    definisjon Flere språk og målformer, kun en kolonne pr språk og målform.    forholdtilkilde må være en av: «egendefinert», «basertPaaKilde» eller «sitatFraKilde»    kilde Formatteres med tekst beskrivelse og gyldig uri til kilde separert med tegnet |. «brønnøysund|https://www.brreg.no/»   merknad Flere språk og målformer, kun en kolonne pr språk og målform.    eksempel Flere språk og målformer, kun en kolonne pr språk og målform.    fagområde Flere språk og målformer, kun en kolonne pr språk og målform.    bruksområde Flere språk og målformer, ubegrenset antall kolonner pr målform (kan ha flere bruksområder termer).    omfang_uri Kun en kolonne.    omfangtekst Kun en kolonne.    kontaktpunkt_epost Kun en kolonne. Rader må inneholde gyldig epostadresse.    kontaktpunkt_telefon Kun en kolonne.    gyldigfom Fra og med dato for perioden hvor begrepet er gyldig. Kun en kolonne. Dato formattert med (åååå-mm-dd) år, måned, dag. 2020-01-31   gyldigtom Til og med dato for perioden hvor begrepet er gyldig. Kun en kolonne. Dato formattert med (åååå-mm-dd) år, måned, dag. 2020-12-01   seogså NB! Dette feltet kan ikke brukes til eksterne referanser utenfor begrepskatalogen. Det anbefales sterkt å sette dette etter begrepet er registrert inn. Kun en kolonne støttes og rader må inneholde en gyldig uri som peker til eksisterende begrep i begrepskatalogen.     Hvordan Importere begreper fra JSON format? Opprett en JSON fil med 1 eller flere begreper på formatet under:\n[ { \u0026quot;anbefaltTerm\u0026quot;: { \u0026quot;navn\u0026quot;: { \u0026quot;nb\u0026quot;: \u0026quot;1demoterm1811\u0026quot;, \u0026quot;en\u0026quot;:\u0026quot;Test English term\u0026quot; } }, \u0026quot;tillattTerm\u0026quot;: { \u0026quot;nb\u0026quot;: [ \u0026quot;Tillatt term\u0026quot; ] }, \u0026quot;frarådetTerm\u0026quot;: { \u0026quot;nb\u0026quot;: [ \u0026quot;Frarådet term\u0026quot; ] }, \u0026quot;definisjon\u0026quot;: { \u0026quot;tekst\u0026quot;: { \u0026quot;nb\u0026quot;: \u0026quot;definisjon\u0026quot; } }, \u0026quot;kildebeskrivelse\u0026quot;: { \u0026quot;forholdTilKilde\u0026quot;: \u0026quot;egendefinert\u0026quot;, \u0026quot;kilde\u0026quot;: [] }, \u0026quot;merknad\u0026quot;: { \u0026quot;nb\u0026quot;: \u0026quot;merknad\u0026quot; }, \u0026quot;eksempel\u0026quot;: { \u0026quot;nb\u0026quot;: \u0026quot;bruk av begrepet: Eksempel\u0026quot; }, \u0026quot;fagområde\u0026quot;: { \u0026quot;nb\u0026quot;: \u0026quot;bruk av begrepet: Fagområde\u0026quot; }, \u0026quot;bruksområde\u0026quot;: { \u0026quot;nb\u0026quot;: [ \u0026quot;bruk av begrepet: bruksområde(r)\u0026quot; ] }, \u0026quot;omfang\u0026quot;: { \u0026quot;uri\u0026quot;: \u0026quot;lenketilomfangno\u0026quot;, \u0026quot;tekst\u0026quot;: \u0026quot;bruk av begrepet: Omfang: Tittel på omfang\u0026quot; }, \u0026quot;kontaktpunkt\u0026quot;: { \u0026quot;harEpost\u0026quot;: \u0026quot;e-post@epost.no\u0026quot;, \u0026quot;harTelefon\u0026quot;: \u0026quot;47474747\u0026quot; }, \u0026quot;gyldigFom\u0026quot;: \u0026quot;2019-12-31\u0026quot;, \u0026quot;gyldigTom\u0026quot;: \u0026quot;2020-12-30\u0026quot;, \u0026quot;endringslogelement\u0026quot;: { \u0026quot;brukerId\u0026quot;: \u0026quot;03096000854\u0026quot;, \u0026quot;endringstidspunkt\u0026quot;: \u0026quot;2020-10-14T12:54:52.264+02:00\u0026quot; }, \u0026quot;seOgså\u0026quot;: [ \u0026quot;http://begrepskatalogen/begrep/98da4336-dff2-11e7-a0fd-005056821322\u0026quot;, \u0026quot;http://begrepskatalogen/begrep/98da4336-dff2-11e7-a0fd-005056821322\u0026quot; ] }, { \u0026quot;anbefaltTerm\u0026quot;: { \u0026quot;navn\u0026quot;: { \u0026quot;nb\u0026quot;: \u0026quot;2demoterm1811\u0026quot; } }, \u0026quot;tillattTerm\u0026quot;: { \u0026quot;nb\u0026quot;: [ \u0026quot;Tillatt term\u0026quot; ] }, \u0026quot;frarådetTerm\u0026quot;: { \u0026quot;nb\u0026quot;: [ \u0026quot;Frarådet term\u0026quot; ] }, \u0026quot;definisjon\u0026quot;: { \u0026quot;tekst\u0026quot;: { \u0026quot;nb\u0026quot;: \u0026quot;definisjon\u0026quot; } }, \u0026quot;kildebeskrivelse\u0026quot;: { \u0026quot;forholdTilKilde\u0026quot;: \u0026quot;egendefinert\u0026quot;, \u0026quot;kilde\u0026quot;: [] }, \u0026quot;merknad\u0026quot;: { \u0026quot;nb\u0026quot;: \u0026quot;merknad\u0026quot; }, \u0026quot;eksempel\u0026quot;: { \u0026quot;nb\u0026quot;: \u0026quot;bruk av begrepet: Eksempel\u0026quot; }, \u0026quot;fagområde\u0026quot;: { \u0026quot;nb\u0026quot;: \u0026quot;bruk av begrepet: Fagområde\u0026quot; }, \u0026quot;bruksområde\u0026quot;: { \u0026quot;nb\u0026quot;: [ \u0026quot;bruk av begrepet: bruksområde(r)\u0026quot; ] }, \u0026quot;omfang\u0026quot;: { \u0026quot;uri\u0026quot;: \u0026quot;http://lenketilomfang.no\u0026quot;, \u0026quot;tekst\u0026quot;: \u0026quot;bruk av begrepet: Omfang: Tittel på omfang\u0026quot; }, \u0026quot;kontaktpunkt\u0026quot;: { \u0026quot;harEpost\u0026quot;: \u0026quot;e-post@epost.no\u0026quot;, \u0026quot;harTelefon\u0026quot;: \u0026quot;47474747\u0026quot; }, \u0026quot;gyldigFom\u0026quot;: \u0026quot;2019-12-31\u0026quot;, \u0026quot;gyldigTom\u0026quot;: \u0026quot;2020-12-30\u0026quot;, \u0026quot;endringslogelement\u0026quot;: { \u0026quot;brukerId\u0026quot;: \u0026quot;03096000854\u0026quot;, \u0026quot;endringstidspunkt\u0026quot;: \u0026quot;2020-10-14T12:54:52.264+02:00\u0026quot; }, \u0026quot;seOgså\u0026quot;: [ \u0026quot;http://begrepskatalogen/begrep/98da4336-dff2-11e7-a0fd-005056821322\u0026quot;, \u0026quot;http://begrepskatalogen/begrep/98da4336-dff2-11e7-a0fd-005056821322\u0026quot; ] } ]  Publisere en begrepssamling via vår høsteløsning For å publisere en begrepssamling via vår høsteløsning må følgende gjøres: 1. Tilgjengeliggjøre begrepssamlingen som SKOS-AP-NO, og 2. Konfigurere FDKs høsteløsning\nTilgjengeliggjøre begrepssamlingen som SKOS-AP-NO Konfigurere FDKs høsteløsning "},{"uri":"/felles-datakatalog/begrepskatalog/standarder/skos/","title":"Simple Knowledge Organization System (SKOS)","tags":[],"description":"","content":" Standard for tilgjengeliggjøring av begrep - SKOS Simple Knowledge Organization System, https://www.w3.org/TR/skos-reference/: Standarden definerer hvordan begreper representeres i maskinlesbare formater RDF: Resource Description Framework (RDF), 2014-02-25, https://www.w3.org/RDF/.\nSKOS er et lite vokabular (metamodell) for de mest sentrale klassene og egenskapene for begreper (Concept). For å bruke SKOS som representasjonsspråk i begrepsbeskrivelser må vokabularet utvides med andre vokabularer. Denne standarden supplerer SKOS med følgende vokabularer:\n Dublin core terms (DCT), prefiks dct: - supplerer med generelle egenskaper knyttet til dokumentasjon Data catalog vocabulary (DCAT), prefiks dcat: - supplerer med generelle egenskaper knyttet til datasett SKOS extension for labels (SKOS-XL), prefiks skosxl: - supplerer med egenskaper knyttet til termer SKOS extension for representing statistical classifications (XKOS), prefiks xkos: - supplerer med egenskaper knyttet til relasjoner Norske SKOS-utvidelser, prefiks skosno: - det som etter bruk av ovennevnte suppleringer fortsatt mangler, vil suppleres med egne norske utvidelser til SKOS.  Norske utvidelser til SKOS vil bli definert og gjort tilgjengelig senere via vokab.norge.no/skosno#.\n"},{"uri":"/felles-datakatalog/begrepskatalog/standarder/tbx/","title":"TermBase Exchange (TBX)","tags":[],"description":"","content":" Standard for tilgjengeliggjøring av begrep - TBX ISO 30042 Systems to manage terminology, knowledge and content —TermBase eXchange (TBX): Standarden definerer et rammeverk for hvordan (samlinger av) begrepsbeskrivelser skal kunne utveksles i maskinlesbare formater. Spesifikasjonen i dette kapitlet utgjør definisjonen av en TBX-dialekt, kalt TBX-AP-No. Dialektnavnet TBX-AP-No skal oppgis i en TBX-fil for å være i samsvar med denne standarden: .\nSpesifikasjonen sier ikke hva som er obligatoriske felter, men hvordan et felt skal representeres i TBX når feltet brukes. Se Forvaltningsstandard for begrepsbeskrivelser hhv. TBX for hva som er obligatorisk.\nFor referanser fra et begrep til andre begreper, har vi valgt å bruke , også i tilfeller begreper som refereres til er i samme TBX-fil. Dette fordi Forvaltningsstandard for begrepsbeskrivelser krever at ethvert begrep skal ha en URI. I tabellen under er det også tatt med PID (persistent identifier) til definisjoner av datafelter og kodeverdier. Dette for å oppnå semantisk interoperabilitet med andre TBX-dialekter, ved at man gjennom unike PIDer refererer til samme definisjoner av datafelter og kodeverdier, selv om man bruker ulike termer i ulike TBX-dialekter. Vi bruker primært PIDer som finnes fra ISO (www.isocat.org/datcat/), supplert med definisjoner/PIDer fra andre offisielle kilder (bl.a. SKOSog Dublin Core).\nDer det p.t. ikke finnes ferdige internasjonale definisjoner, er PID oppgitt med prefiks “skosno:”. Disse vil bli definert og publisert senere under vokab.norge.no/skosno#. PIDer er ikke nødvendig å oppgi i en TBX-fil, men brukes til å slå opp i definisjoner når man implementerer eller tolker en TBX-fil som er i samsvar med denne standarden.\n"},{"uri":"/felles-datakatalog/begrepskatalog/","title":"Begrepskatalog","tags":[],"description":"","content":" Felles begrepskatalog ble utviklet i 2018 som en utvidelse av Felles datakatalog for å skape en oversikt over dataenes betydning. Det er ikke en forutsetning at begrepene i Felles begrepskatalog er koblet til datasett, men denne koblingen skal gjøres der det er hensiktsmessig. Med dette åpner vi også for at begrepslister som ikke har et motsvar i datasett kan publiseres i Felles begrepskatalog.\nHvor hentes begreps-beskrivelser fra? FDK høster beskrivelser fra andre begrepskataloger. I tillegg tilbys en registreringsløsning.\nHvordan registerer jeg mine begrep? Felles datasettkatalog inneholder en registreringsløsning som alle offentlige virksomheter kan benytte. Private virksomheter oppfordres til å ta kontakt for å registrere sine begreper.\nHvordan importerer jeg mine begreper direkte inn i publiseringsløsningen?? Se brukerveiledning her\nHvor finner jeg felles begrepskatalog? Her finner du Begrepskatalogen: https://data.norge.no/concepts\n"},{"uri":"/developers_handbook/code_quality/","title":"Code quality","tags":[],"description":"","content":"We use SonarCloud to monitor code quality, including test coverage.\nFirst and foremost code quality analysis is a tool for code review. In the following pages you will find a brief discussion on what we consider important aspects of quality when doing a review.\n"},{"uri":"/felles-datakatalog/informasjonsmodell-katalog/","title":"Informasjonsmodell-katalog","tags":[],"description":"","content":" Felles informasjonsmodell-katalog er en utvidelse av Felles datakatalog for å skape en oversikt over informasjonsmodeller. I katalogen finner man også hvilke API\u0026rsquo;er informasjonsmodellene tilhører.\nHvor hentes informasjonsmodellene fra? I dag hentes informasjonsmodellen fra spesifikasjonen til APIer i API-katalogen. Spesifikt hentes modellene uta av spesifikasjonens Schema Object. I tillegg høster FDK fra andre informasjonsmodell-kataloger.\nHvordan registerer jeg mine informasjonsmodeller? Foreløpig har vi ingen løsning for å registrere informasjonsmodeller i vår løsning.\nHvor finner jeg felles informasjonsmodell-katalog? Her finner du Informasjonsmodell-katalogen: https://data.norge.no/informationmodels\n"},{"uri":"/developers_handbook/monitoring/","title":"Monitoring","tags":[],"description":"","content":"Monitoring is critical to a microservice architecture. In the following pages we describe how we instrument our services in order to be properly monitored.\n"},{"uri":"/developers_handbook/operations_and_status_codes/","title":"Operations and status codes","tags":[],"description":"","content":" The following is guidelines prescribing what HTTP method to use for common \u0026ldquo;business functions\u0026rdquo; and what status codes to return for the happy case. If a header is to be returned, an example is given.\n   Function HTTP Method Status Code Header Comment     List GET /foos/ 200 OK  Collection in response. 200 Ok even if empty collection   Create POST /foos/ 201 Created Location: /foos/1234 No body in response   Get GET /foos/1234 200 OK     Update PUT /foos/1234 204 No Content  No body in response   Update (patch) PATCH /foos/1234 200 OK  The updated resource in response body   Delete DELETE /foos/1234 204 No Content  No body in response    References Method definitions Status Code Definitions\nJSON Patch\n"},{"uri":"/developers_handbook/prepare_your_computer/","title":"Prepare your computer","tags":[],"description":"","content":"The following is what is intended as useful hints and howtos when you set up your computer for working with our projects. The following tips are in no way requirements, but should help you to get started painlessly.\n Linux A howto decsribing how to create and run a linux virtual machine\n  Required software A list of required software and how to install\n  Recommended software A list of recommended software and how to install\n  "},{"uri":"/felles-datakatalog/statistikk/","title":"Statistikk","tags":[],"description":"","content":" Oktober 2018 April 2019 Mai 2019 Juni 2019 Juli 2019 August 2019 September 2019 Oktober 2019 November 2019  "},{"uri":"/_header/","title":"","tags":[],"description":"","content":"\n"},{"uri":"/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"/","title":"Felles datakatalog dokumentasjon","tags":[],"description":"","content":" Felles datakatalog dokumentasjon Her finner du informasjon og dokumentasjon om Felles datakatalog.\nHvis du finner noe som er feil i vår dokumentasjon, eller som ikke er beskrevet godt nok på disse sidene:\n send en epost til fellesdatakatalog@digdir.no, opprett en sak, eller lag en pull request.  Dersom du har funnet feil eller mangler i Felles datakatalog, opprett en sak direkte her.\n"},{"uri":"/tags/","title":"Tags","tags":[],"description":"","content":""}]